name: Publish to NPM
on:
    push:
        tags:
            - v[0-9]+\.[0-9]+\.[0-9]+

jobs:

    publish:
        runs-on: ubuntu-latest
        steps:
            - name: Get sources
              uses: actions/checkout@v2

            - name: Read .nvmrc for Node.js version
              run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
              id: nvm

            - name: Setup NodeJS
              uses: actions/setup-node@v2
              with:
                  node-version: '${{ steps.nvm.outputs.NODE_VERSION }}'
                  registry-url: 'https://registry.npmjs.org'
                  scope: '@waves'

            - name: Install dependencies
              run: npm install

            - name: Build package
              run: npm run build

            - name: Publish to NPM
              run: npm publish --access public
              env:
                NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

    report:
        needs: publish
        runs-on: ubuntu-latest
        steps:
            - name: Get sources
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Find previous Git tag
              run: echo ::set-output name=VALUE::$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
              id: prevTag

            - name: Find current Git tag
              run: echo ::set-output name=VALUE::$(git describe --abbrev=0 --tags `git rev-list --tags --max-count=1`)
              id: currentTag

            - name: Get list of released issues
              run: >-
                  echo ::set-output name=LIST::$(
                  git log --reverse --pretty=format:"%s" ^"$PREV_TAG" "$CURRENT_TAG"
                  | grep -oE "^KEEP\-[0-9]+"
                  | jq -Rsc '{issues:[split("\n")|unique|.[]|select(length > 0)],releaseVersion:"${CURRENT_TAG:1}",component:"provider"}' )
              env:
                  PREV_TAG: ${{ steps.prevTag.outputs.VALUE }}
                  CURRENT_TAG: ${{ steps.currentTag.outputs.VALUE }}
              id: issues

            - name: Report released issues
              run: |
                  curl -X POST -H 'Content-type: application/json' --data "$ISSUES_LIST" "$HOOKS_URL/$HOOK_RELEASE"
              env:
                  ISSUES_LIST: ${{ steps.issues.outputs.LIST }}
                  HOOKS_URL: ${{ secrets.HOOKS_URL }}
                  HOOK_RELEASE: ${{ secrets.HOOK_RELEASE }}
